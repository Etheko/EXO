# Server Configuration
server.port=8080

# Database Configuration
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/exodb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC}
spring.datasource.username=${DB_USER:root}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=${DB_DRIVER_CLASS_NAME:com.mysql.cj.jdbc.Driver}

# H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA Configuration
spring.jpa.hibernate.ddl-auto=${DB_DDL_AUTO:update}
# spring.jpa.hibernate.ddl-auto=create

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=${DB_DIALECT:org.hibernate.dialect.MySQLDialect}
spring.jpa.properties.hibernate.format_sql=true

# DevTools Configuration
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
spring.devtools.restart.additional-paths=src/main/java
spring.devtools.restart.exclude=static/**,public/**

# CORS Configuration
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:5173}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.doc-expansion=none

# ===============================
# JWT TOKEN CONFIGURATION
# ===============================
# Secret key for signing JWT tokens. It should be a long, random, Base64-encoded string.
# IMPORTANT: Keep this secret in a secure place and do not expose it publicly.
jwt.secret.key=${JWT_SECRET_KEY:rCzPiNvfC49cGMWgI+aFylutlltJgOgVA7M/5gtHhozDrajlRW8D31yCfSa+VTDAjBYKEe7ew4/17k+5vPonaw==}

# Access token expiration time in milliseconds (e.g., 1 hour)
jwt.expiration.access-token=3600000

# Refresh token expiration time in milliseconds (e.g., 7 days)
jwt.expiration.refresh-token=604800000

# ===============================
# FORCE INITIALIZATION (TEMPORARY)
# ===============================
# Set these to true to force reinitialization and clear all data
# IMPORTANT: After first startup, change these back to false
exo.force.user.init=${FORCE_USER_INIT:false}
exo.force.project.init=${FORCE_PROJECT_INIT:false}
exo.force.section.init=${FORCE_SECTION_INIT:false}

# exo.force.user.init=true
# exo.force.project.init=true
# exo.force.section.init=true

# After first successful startup, change these back:
# exo.force.user.init=false
# exo.force.project.init=false
# exo.force.section.init=false
# spring.jpa.hibernate.ddl-auto=update 